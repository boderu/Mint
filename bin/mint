#!/bin/bash
# Skript um Linux Mint einzurichten. Verlinke und starte dieses Skript in und aus dem Homeverzeichnis!
# Das System sollte bereits die ersten Updates haben und die Verbindung zum Internet muss funktionieren.

cd $HOME

$HOME/Mint/bin/install_directories

if [[ "$USER" != "guest" ]]
then
    $HOME/Mint/bin/install_deb
    $HOME/Mint/bin/install_flatpak
	$HOME/Mint/bin/install_nerd
	$HOME/Mint/bin/install_micro
	$HOME/Mint/bin/install_lazygit
	$HOME/Mint/bin/install_xplr
	$HOME/Mint/bin/install_cppcheck
	$HOME/Mint/bin/install_drawio
	$HOME/Mint/bin/install_frontdesign
	$HOME/Mint/bin/install_vuescan
	$HOME/Mint/bin/install_segger
	$HOME/Mint/bin/install_vscode
	$HOME/Mint/bin/install_sysworxx
	$HOME/Mint/bin/install_diffusion
	$HOME/Mint/bin/install_ccs
	$HOME/Mint/bin/install_ollama
    $HOME/Mint/bin/install_ruby

#===================================================================================================================
	echo ; echo "arm-none-eabi-gdb"
	if [ ! -e "/usr/bin/arm-none-eabi-gdb" ]
	then
		if [ -e "/usr/bin/gdb-multiarch" ]
		then
			sudo ln --verbose -s /usr/bin/gdb-multiarch /usr/bin/arm-none-eabi-gdb
		fi
	fi
	#===================================================================================================================
	echo ; echo "Remove packages that are no longer required"
	sudo apt autoremove -y
	#===================================================================================================================
	echo ; echo "Set up User Guest"
	egrep -i guest /etc/passwd >/dev/null
	if [ $? -ne 0 ]
	then
		sudo adduser --disabled-password --gecos "Guest" guest
		sudo adduser guest users
		sudo passwd -d guest
	fi

	echo ; echo "Add users to the users group"
	sudo adduser $USER users
	#===================================================================================================================
	echo ; echo "Configure shared folder for all users to share files"
	if [ -d /home/Share ]
	then
		echo "Share folder already exists"
	else
		sudo mkdir /home/Share
		sudo chown root:users /home/Share
		sudo chmod ugo+rwX /home/Share
		sudo chmod g+s /home/Share
	fi

	sudo rm -f /home/Share/mint
	sudo cp $HOME/Mint/bin/mint /home/Share/

	echo
	echo "Configure public (RO) folder for all users"
	if [ -d /home/Public ]
	then
		echo "Public folder already exists"
	else
		sudo mkdir /home/Public
		sudo chown $USER:users /home/Public
		sudo chmod ugo+rX /home/Public
		sudo chmod u+w /home/Public
		sudo chmod ug+s /home/Public
	fi
	#===================================================================================================================
	echo
	echo "Increase limit for file system watches (inotify)"
	if [ ! -e /etc/sysctl.d/90-inotify.conf ]
	then
		sudo cp $HOME/Mint/Sytem/etc/sysctl.d/90-inotify.conf /etc/sysctl.d/
		sudo chown root:root /etc/sysctl.d/90-inotify.conf
		sudo sysctl -p --system
	fi

fi # if $USER != guest

#=======================================================================================================================
$HOME/Mint/bin/install_python
$HOME/Mint/bin/install_rust

#=======================================================================================================================
echo ; echo "Set up local configurations"
if [ -d "Mint" ]
then
	cd Mint
	git fetch --all
	git pull
	cd ..
else
	git clone https://github.com/boderu/Mint.git
fi

if [ -d ".oh-my-zsh" ]
then
	cd .oh-my-zsh
	git fetch --all
	git pull
	cd ..
else
	git clone https://github.com/ohmyzsh/ohmyzsh.git .oh-my-zsh
fi


#=======================================================================================================================
echo ; echo "Check out or update frameworks"

if [ -d "$HOME/Frameworks/KiCAD" ]
then
	pushd "$HOME/Frameworks/KiCAD"
	git fetch --all
	git pull
	popd
else
	pushd "$HOME/Frameworks"
	git clone https://github.com/boderu/Framework.KiCAD.git KiCAD
	popd
fi


#=======================================================================================================================
echo ; echo "FireFox Download Helper App"
curl -sSLf https://github.com/aclap-dev/vdhcoapp/releases/latest/download/install.sh | bash


#=======================================================================================================================
$HOME/Mint/bin/install_links


#=======================================================================================================================
echo ; echo "Install additional Mint applets"
pushd "$HOME/.local/share/cinnamon/applets/"

if [ -e "$HOME/Mint/mint-actions-download.conf" ]
then
	cat "$HOME/Mint/mint-actions-download.conf" | grep -v '^#' | grep -v '^$' | \
	while read LINE
	do
		if [ ! -d "$LINE" ]
		then
			echo "$LINE"
			wget https://cinnamon-spices.linuxmint.com/files/applets/${LINE}.zip && \
			unzip ${LINE}.zip
			rm -f ${LINE}.zip
		else
			echo "$LINE already exists"
		fi
	done
fi

popd


#=======================================================================================================================
echo ; echo "Install additional Nemo actions"
# Test, ob das Verzeichnis noch ein Link ist
if [ -L "$HOME/.local/share/nemo" ]
then
	echo "$HOME/.local/share/nemo is still a link --> remove"
	rm -Rv "$HOME/.local/share/nemo"
	mkdir -p "$HOME/.local/share/nemo/actions"
	mkdir -p "$HOME/.local/share/nemo/scripts"
	mkdir -p "$HOME/.local/share/nemo/search-helpers"
fi

pushd "$HOME/.local/share/nemo/actions/"

if [ -e "$HOME/Mint/nemo-actions-download.conf" ]
then
	cat "$HOME/Mint/nemo-actions-download.conf" | grep -v '^#' | grep -v '^$' | \
	while read LINE
	do
		echo "$LINE"
		wget https://cinnamon-spices.linuxmint.com/files/actions/${LINE}.zip && \
		unzip -o ${LINE}.zip
		rm -f ${LINE}.zip
	done
fi

# eigene Nemo Actions verlinken - vorher defekte Links löschen
find -L "$HOME/.local/share/nemo/actions/" -type l -exec rm -f {} \;

ls "$HOME/Mint/NemoActions" |
while read FILE
do
	echo $FILE
	# sollte bereits ein Link oder eine Datei existieren -> löschen
	if [ -e "$HOME/.local/share/nemo/actions/${FILE}" ]
	then
		rm -fv "$HOME/.local/share/nemo/actions/${FILE}"
	fi

	# Link (neu) erstellen
	echo "Link $FILE"
	ln -s "$HOME/Mint/NemoActions/${FILE}" "$HOME/.local/share/nemo/actions/${FILE}"
	echo
done

popd


#=======================================================================================================================
# Apps und Desktop konfigurieren
# gibt es eine abweichende Font-Skalierung?
if [ -f $HOME/.text-scaling-factor ]
then
	echo "eine abweichende Font-Skalierung von $(cat $HOME/.text-scaling-factor) einrichten"
	cat $HOME/Mint/org.cinnamon.dconf | \
		sed "s/text-scaling-factor=.*/text-scaling-factor=$(cat $HOME/.text-scaling-factor)/" | \
		dconf load /org/cinnamon/
else
	dconf load /org/cinnamon/ < $HOME/Mint/org.cinnamon.dconf
fi

dconf load /org/nemo/						< $HOME/Mint/org.nemo.dconf
dconf load /org/x/editor/					< $HOME/Mint/org.x.editor.dconf
dconf load /org/x/pix/						< $HOME/Mint/org.x.pix.dconf
dconf load /org/x/reader/					< $HOME/Mint/org.x.reader.dconf
dconf load /org/gnome/calculator/			< $HOME/Mint/org.gnome.calculator.dconf
dconf load /org/gnome/terminal/				< $HOME/Mint/org.gnome.terminal.dconf
dconf load /org/gnome/desktop/interface/	< $HOME/Mint/org.gnome.desktop.interface.dconf

echo
echo "Install broot"
curl -o broot -L https://dystroy.org/broot/download/x86_64-linux/broot
sudo mv -f broot /usr/local/bin
sudo chmod +x /usr/local/bin/broot


echo
echo "Copy Mozilla settings"
if [ ! -d "$HOME/.mozilla" ]
then
	if [ -d "$HOME/SynologyDrive/Mint/.mozilla" ]
	then
		cp -frv "$HOME/SynologyDrive/Mint/.mozilla" "$HOME/"
	fi
fi

echo
echo "zusätzliche Firefox Einstellungen:"
echo "1) Erzeuge alle Firefox-Profile (about:profiles)"
echo "2) Synchronisiere alle Profile (verschiedene Logins notwendig)"
echo "3) Nach der Synchronisierung: don't allow Firefox to send data"
echo "4) Ändere die Toolbar, ..."
echo "5) Ändere die internen Firefox-Einstellungen (about:config)"
echo "   browser.uidensity --> 1"
echo "   signon.includeOtherSubdomainsInLookup --> false"
#read -p "drücke Enter ..."

echo
echo "Einrichtung beendet."
echo

# EOF
