#!/usr/bin/env bash
# Skript um Linux Mint einzurichten. Verlinke und starte dieses Skript in und aus dem Homeverzeichnis!
# Das System sollte bereits die ersten Updates haben und die Verbindung zum Internet muss funktionieren.

PARAM_STEP=''
PARAM_NOGAMES=''

fncHelp()
{
	echo
	echo "Usage: $0 [-?sg]"
	echo -e "\t-? Show this help"
	echo -e "\t-s Run this script step by step"
	echo -e "\t-g Uninstall the games"
	echo
	exit 0 # Exit script after printing help
}

function fncStep
{
	if [ "$PARAM_STEP" == "set" ]
	then
		read -p "press Enter ..."
	fi
}

while getopts "sg" OPT 2>/dev/null
do
	case "$OPT" in
		s ) PARAM_STEP="set" ;;
		g ) PARAM_NOGAMES="set" ;;
		? ) fncHelp ;; # Print helpFunction in case parameter is non-existent
	esac
done

cd $HOME

$HOME/Mint/bin/installDirectories.sh	; fncStep

if [ "$PARAM_NOGAMES" == "set" ]
then
	cat "$HOME/Mint/deb-install.conf" > "$HOME/.deb-install.conf"
	cat "$HOME/Mint/deb-remove.conf" > "$HOME/.deb-remove.conf"
	cat "$HOME/Mint/deb-games.conf" >> "$HOME/.deb-remove.conf"

	cat "$HOME/Mint/flatpak-install.conf" > "$HOME/.flatpak-install.conf"
	cat "$HOME/Mint/flatpak-remove.conf" > "$HOME/.flatpak-remove.conf"
	cat "$HOME/Mint/flatpak-games.conf" >> "$HOME/.flatpak-remove.conf"
else
	cat "$HOME/Mint/deb-install.conf" > "$HOME/.deb-install.conf"
	cat "$HOME/Mint/deb-remove.conf" > "$HOME/.deb-remove.conf"
	cat "$HOME/Mint/deb-games.conf" >> "$HOME/.deb-install.conf"

	cat "$HOME/Mint/flatpak-install.conf" > "$HOME/.flatpak-install.conf"
	cat "$HOME/Mint/flatpak-remove.conf" > "$HOME/.flatpak-remove.conf"
	cat "$HOME/Mint/flatpak-games.conf" >> "$HOME/.flatpak-install.conf"
fi
echo "Installation lists created"		; fncStep
$HOME/Mint/bin/installDeb.sh			; fncStep
$HOME/Mint/bin/installFlatpak.sh		; fncStep
rm --force "$HOME/.deb-install.conf"
rm --force "$HOME/.deb-remove.conf"
rm --force "$HOME/.flatpak-install.conf"
rm --force "$HOME/.flatpak-remove.conf"

$HOME/Mint/bin/installNerd.sh			; fncStep
$HOME/Mint/bin/installFuzzyFinder.sh	; fncStep
$HOME/Mint/bin/installMicro.sh			; fncStep
$HOME/Mint/bin/installLazygit.sh		; fncStep
$HOME/Mint/bin/installBroot.sh			; fncStep
$HOME/Mint/bin/installXplr.sh			; fncStep
$HOME/Mint/bin/installCppCheck.sh		; fncStep
$HOME/Mint/bin/installDrawIO.sh			; fncStep
$HOME/Mint/bin/installFrontDesign.sh	; fncStep
$HOME/Mint/bin/installVueScan.sh		; fncStep
$HOME/Mint/bin/installSegger.sh			; fncStep
$HOME/Mint/bin/installVSCode.sh			; fncStep
$HOME/Mint/bin/installSysWorxx.sh		; fncStep
$HOME/Mint/bin/installDiffusion.sh		; fncStep
$HOME/Mint/bin/installCCS.sh			; fncStep
$HOME/Mint/bin/installOllama.sh			; fncStep
$HOME/Mint/bin/installRuby.sh			; fncStep
$HOME/Mint/bin/installPython.sh			; fncStep
$HOME/Mint/bin/installRust.sh			; fncStep

#=======================================================================================================================
echo ; echo "arm-none-eabi-gdb"
if [ ! -e "/usr/bin/arm-none-eabi-gdb" ]
then
	if [ -e "/usr/bin/gdb-multiarch" ]
	then
		sudo ln --verbose -s /usr/bin/gdb-multiarch /usr/bin/arm-none-eabi-gdb
	fi
fi
fncStep

#=======================================================================================================================
echo ; echo "Remove packages that are no longer required"
sudo apt autoremove -y
fncStep

#=======================================================================================================================
echo ; echo "Set up User Guest"
egrep -i guest /etc/passwd >/dev/null
if [ $? -ne 0 ]
then
	sudo adduser --disabled-password --gecos "Guest" guest
	sudo adduser guest users
	sudo passwd -d guest
fi

echo ; echo "Add users to the users and dialout groups"
sudo adduser $USER users
sudo adduser $USER dialout
fncStep

#=======================================================================================================================
echo ; echo "Configure shared folder for all users to share files"
if [ -d /home/Share ]
then
	echo "Share folder already exists"
else
	sudo mkdir /home/Share
	sudo chown root:users /home/Share
	sudo chmod ugo+rwX /home/Share
	sudo chmod g+s /home/Share
fi

if [ ! -d "/home/Share/Mint" ]
then
	pushd "/home/Share"
	git clone https://github.com/boderu/Mint.git
	popd
fi
pushd "/home/Share/Mint"
git pull
popd
fncStep

echo
echo "Configure public (RO) folder for all users"
if [ -d /home/Public ]
then
	echo "Public folder already exists"
else
	sudo mkdir /home/Public
	sudo chown $USER:users /home/Public
	sudo chmod ugo+rX /home/Public
	sudo chmod u+w /home/Public
	sudo chmod ug+s /home/Public
fi
fncStep

#=======================================================================================================================
echo
echo "Increase limit for file system watches (inotify)"
if [ ! -e /etc/sysctl.d/90-inotify.conf ]
then
	sudo cp $HOME/Mint/Sytem/etc/sysctl.d/90-inotify.conf /etc/sysctl.d/
	sudo chown root:root /etc/sysctl.d/90-inotify.conf
	sudo sysctl -p --system
fi
fncStep

#=======================================================================================================================
echo ; echo "Set up local configurations"
if [ -d ".oh-my-zsh" ]
then
	cd .oh-my-zsh
	git fetch --all
	git pull
	cd ..
else
	git clone https://github.com/ohmyzsh/ohmyzsh.git .oh-my-zsh
fi
fncStep

#=======================================================================================================================
$HOME/Mint/bin/installFrameworks.sh			; fncStep
$HOME/Mint/bin/installLinks.sh				; fncStep
$HOME/Mint/bin/installMintApplets.sh		; fncStep
$HOME/Mint/bin/installNemoActions.sh		; fncStep
$HOME/Mint/bin/installDesktop.sh			; fncStep
$HOME/Mint/bin/installMozillaThunderbird.sh	; fncStep

#=======================================================================================================================
echo
echo "zusätzliche Firefox Einstellungen:"
echo "1) Erzeuge alle Firefox-Profile (about:profiles)"
echo "2) Synchronisiere alle Profile (verschiedene Logins notwendig)"
echo "3) Nach der Synchronisierung: don't allow Firefox to send data"
echo "4) Ändere die Toolbar, ..."
echo "5) Ändere die internen Firefox-Einstellungen (about:config)"
echo "   browser.uidensity --> 1"
echo "   signon.includeOtherSubdomainsInLookup --> false"

echo
echo "Einrichtung beendet."
echo

# EOF
